Your database should have at least 4 entities and at least 4 relationships, one of which must be a many to many relationship. Your database should be pre-populated with sample data.

It should be possible to add entries to every table individually and every table should be used in at least one select query. For the select queries, it is fine to just display the content of
 the tables, but your website needs to also have the ability to search using text or filter using a dynamically populated list of properties to filter on. This search/filter functionality 
 should be present for at least one entity. It is generally not appropriate to have only a single query that joins all tables and displays them.

You also need to include one delete and one update function in your website, for any of the entities. In addition, it should be possible to add and remove things from at least one many-to-many
 relationship and it should be possible to add things to all relationships.

In a many-to-one relationship like bsg_people to bsg_planets, it means that you should be able to set the homeworld value to NULL on a person in bsg_people. That removes the relationship.

It is a little more interesting in a many-to-many relationship because one would need to delete a row from a table. That would be the case with bsg_people and bsg_certifications. One should be
 able to add and remove certifications for a person without deleting either bsg_people rows or bsg_certification rows.


 X- Pre Populated with Sample data
 X- Be able to add entries to each table
 X- every table should have a select
 -- ability to search using text or filter using dynamically populated list of properties to filter on
 X- One delete
 -- One update


do a player search, where name like '%blah%'
populate data with what was found